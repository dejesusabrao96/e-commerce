"""
Django settings for Eshop project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import dj_database_url
import os
# from django.core.management.utils import get_random_secret_key
# import django_heroku

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = os.environ.get('SECRET_KEY', '-95t%=#4o3@l-(-%ok9*h%n3!0(sdchjn%+_$5#umaj-!3bg*7')
# SECRET_KEY = ('-95t%=#4o3@l-(-%ok9*h%n3!0(sdchjn%+_$5#umaj-!3bg*7')
SECRET_KEY = os.environ.get('SECRET_KEY', default='mjqm-1#!iro7a8-3%e*mdwb0x42^7zl=n@8=f1krl9%l@fv0u@')

# SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-g=jzhv5zv8nxar2z0jpv#jv-$o*p(+e597*wgkau$gc&7v*m4e')
# DEBUG = os.environ.get('DEBUG', 'False') == 'False'
# ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '127.0.0.1').split(",")


# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = os.environ.get('DEBUG','True')=="True"
DEBUG = True

ALLOWED_HOSTS = ["e-commercetls.onrender.com"]

# ALLOWED_HOSTS = []

# DATABASES EXTERNAL URL
# postgres://db_store_snby_user:NMQmQOJOqVrvrqSCtTwW1o4M5XCQ6iht@dpg-cng0tpun7f5s73fc28jg-a.oregon-postgres.render.com/db_store_snby


# django deployment tutorial for free 
# https://www.youtube.com/watch?v=FJBTwa0R_5g




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_bootstrap4',
    'crispy_forms',
    'adminapp',
    'report',
    'store',
    'custom',
    'api',
    'users',
    'ckeditor',
    'ckeditor_uploader',
    'notification',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'Eshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Eshop.wsgi.application'


# if not DEBUG:
#          DATABASES = {
#         "default": dj_database_url.parse(os.environ.get("DATABASE_URL"))
#     }
# else:


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


DATABASES = {
    'default': dj_database_url.config(
        # Replace this value with your local database's connection string. copy the Database External URL
        default='postgres://db_store_snby_user:NMQmQOJOqVrvrqSCtTwW1o4M5XCQ6iht@dpg-cng0tpun7f5s73fc28jg-a.oregon-postgres.render.com/db_store_snby',
        conn_max_age=600
    )
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'db_store',    # Nama database
#         'USER': 'root',    # username database
#         'PASSWORD': 'Watafanu@1996', # password database
#         'HOST': '127.0.0.1',
#         'PORT': '3306',
#         'OPTIONS': {        # ini optional jika ada error (mysql.002)
#            'autocommit' : True
#         }
#     }
# } 
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'db_store_snby',    # Nama database
#         'USER': 'db_store_snby_user',    # username database
#         'PASSWORD': 'NMQmQOJOqVrvrqSCtTwW1o4M5XCQ6iht', # password database
#         'HOST': 'dpg-cng0tpun7f5s73fc28jg-a',
#         'PORT': '5432',
#         'OPTIONS': {        # ini optional jika ada error (mysql.002)
#            'autocommit' : True
#         }
#     }
# } 
## to'o iha nee


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOGIN_REDIRECT_URL = 'home'
LOGIN_URL = 'login'
CRISPY_TEMPLATE_PACK = 'bootstrap4'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
STATIC_URL = '/static/'

# This production code might break development mode, so we check whether we're in DEBUG mode
if not DEBUG:
    # Tell Django to copy static assets into a path called `staticfiles` (this is specific to Render)
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    # Enable the WhiteNoise storage backend, which compresses static files to reduce disk use
    # and renames the files with unique names for each version to support long-term caching
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# STATICFILES_STOREAGE = "whitenoise.storeage.CompressedManifestStaticFilesStorage"

STATICFILES_DIRS = (
     os.path.join(BASE_DIR, 'static'),
)


BASE_DIR = os.path.dirname(os.path.dirname(__file__))


MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace('\\', '/')
MEDIA_URL = '/media/'

# MEDIA_URL = '/media/'

# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# MEDIA_ROOT = '/app/media/'  # Adjust the path as needed
# MEDIA_URL = '/media/'

# CKEditor Settings
CKEDITOR_UPLOAD_PATH = 'uploads/'
CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_JQUERY_URL = '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js' 

CKEDITOR_CONFIGS = {
    'default':
        {
            'toolbar': 'full',
            'width': 'auto',
            'extraPlugins': ','.join([
                'codesnippet',
            ]),
        },
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# STATIC_URL = '/static/'
# MEDIA_URL = "/image/download/"
# MEDIA_ROOT = BASE_DIR

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
from django.contrib.messages import constants as message_constants
MESSAGE_TAGS = {message_constants.DEBUG: 'debug',
        message_constants.INFO: 'info',
        message_constants.SUCCESS: 'success',
        message_constants.WARNING: 'warning',
        message_constants.ERROR: 'danger',}

# teste teste tsetes
# hello world
# Activate Django-Heroku
# django_heroku.settings(locals())